# zsh stuff
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt SHARE_HISTORY

bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey "^[[1;9C" forward-word # macos command key
bindkey "^[[1;9D" backward-word # macos command key

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[Shift-Tab]="${terminfo[kcbt]}"

# setup key accordingly
[[ -n "${key[Home]}"      ]] && bindkey -- "${key[Home]}"       beginning-of-line
[[ -n "${key[End]}"       ]] && bindkey -- "${key[End]}"        end-of-line
[[ -n "${key[Insert]}"    ]] && bindkey -- "${key[Insert]}"     overwrite-mode
[[ -n "${key[Backspace]}" ]] && bindkey -- "${key[Backspace]}"  backward-delete-char
[[ -n "${key[Delete]}"    ]] && bindkey -- "${key[Delete]}"     delete-char
[[ -n "${key[Up]}"        ]] && bindkey -- "${key[Up]}"         up-line-or-history
[[ -n "${key[Down]}"      ]] && bindkey -- "${key[Down]}"       down-line-or-history
[[ -n "${key[Left]}"      ]] && bindkey -- "${key[Left]}"       backward-char
[[ -n "${key[Right]}"     ]] && bindkey -- "${key[Right]}"      forward-char
[[ -n "${key[PageUp]}"    ]] && bindkey -- "${key[PageUp]}"     beginning-of-buffer-or-history
[[ -n "${key[PageDown]}"  ]] && bindkey -- "${key[PageDown]}"   end-of-buffer-or-history
[[ -n "${key[Shift-Tab]}" ]] && bindkey -- "${key[Shift-Tab]}"  reverse-menu-complete

# make sure the terminal is in application mode when zle is active
# only then are the values from $terminfo valid
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
	autoload -Uz add-zle-hook-widget
	function zle_application_mode_start { echoti smkx }
	function zle_application_mode_stop { echoti rmkx }
	add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
	add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

# autocompletion
autoload -Uz compinit && compinit

# theme
fpath+=($HOME/.zsh/agkozak-zsh-prompt)
autoload -U promptinit; promptinit

export LC_ALL=en_US.UTF-8
export AGKOZAK_COLORS_BG_STRING=white
export AGKOZAK_COLORS_PROMPT_CHAR=magenta
export AGKOZAK_COLORS_PATH=cyan
export AGKOZAK_PROMPT_DIRTRIM=0
export AGKOZAK_DIR_LEVELS=1
export AGKOZAK_PROMPT_CHAR=( ❯ %# ❮ )
export AGKOZAK_LEFT_PROMPT_ONLY=1
export AGKOZAK_MULTILINE=0
export AGKOZAK_SHOW_STASH=0
export AGKOZAK_CUSTOM_SYMBOLS=( '⇣⇡' '⇣' '⇡' '+' 'x' '!' '>' '?' 'S')
export AGKOZAK_USER_HOST_DISPLAY=0
if [[ -v CONTAINER_ID ]]; then
  AGKOZAK_PRE_PROMPT_CHAR=' 📦'
fi

prompt agkozak-zsh-prompt
if _agkozak_is_ssh; then
  export AGKOZAK_USER_HOST_DISPLAY=1
fi

# env
exists() {
  command -v "$1" >/dev/null 2>&1
}

if [[ -f /opt/homebrew/bin/brew ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

if [[ -f /home/linuxbrew/.linuxbrew/bin/brew ]]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

if exists zoxide; then
  eval "$(zoxide init zsh)"
fi

if exists fzf; then
  eval "$(fzf --zsh)"
fi

if exists fnm; then
  eval "$(fnm env --use-on-cd --shell zsh)"
fi

if exists nvim; then
  export EDITOR='nvim'
else
  export EDITOR='vim'
fi

if [[ -f ~/.cargo/env ]]; then
  . ~/.cargo/env
fi

# deno did this?
# if [[ ":$FPATH:" != *":/home/gabe/.zsh/completions:"* ]]; then export FPATH="/home/gabe/.zsh/completions:$FPATH"; fi
if [[ -f ~/.deno/env ]]; then
  . ~/.deno/env
fi

if exists go; then
  PATH=$PATH:~/go/bin
fi

if exists snap; then
  PATH=$PATH:/snap/bin
fi

export FORGIT_LOG_FZF_OPTS='--reverse'
[ -f $HOMEBREW_PREFIX/share/forgit/forgit.plugin.zsh ] && source $HOMEBREW_PREFIX/share/forgit/forgit.plugin.zsh

if [[ $TERM == "xterm-kitty" ]]; then
  alias s="kitten ssh"
  alias icat="kitten icat"
  alias kclip="kitten clipboard"
fi
alias ls='ls --color=auto'
alias dup="docker compose up -d"
alias ddown="docker compose down"
alias venv=". ./.venv/bin/activate"
alias unvenv="deactivate"

# external stuff
{{- if eq .chezmoi.hostname "melinoe" }}
export CODESTATS_API_KEY={{- (onepasswordDetailsFields "qboyq43o3sctuyauhbrjxqryc4").credential.value }}
{{- else if eq .chezmoi.hostname "macaria" }}
export CODESTATS_API_KEY={{- (onepasswordDetailsFields "xvfqyhbptjjwhtldojxx3ybw3m").credential.value }}
{{- else if eq .chezmoi.hostname "mac-mini" }}
export CODESTATS_API_KEY={{- (onepasswordDetailsFields "pu6atreg7aimse7k3on3ilkcgu").credential.value }}
{{- end }}
if [[ -n "${CODESTATS_API_KEY:+1}" ]]; then
  . ~/.zsh/code-stats-zsh/codestats.plugin.zsh
fi

if [[ -f ~/local.zsh ]]; then
  . ~/local.zsh
fi
